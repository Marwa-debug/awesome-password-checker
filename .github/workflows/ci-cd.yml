name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.java'
      - '**/*.xml'

jobs:
  # Job to check style
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Install Checkstyle
        run: |
          sudo apt-get install checkstyle

      - name: Run Checkstyle
        run: |
          checkstyle -c /google_checks.xml src/**/*.java
          
  # Job to run unit tests and coverage
  unit_tests:
    runs-on: ubuntu-latest
    needs: checkstyle  # This ensures that the Checkstyle job runs first
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          
      - name: Install dependencies
        run: ./mvnw install -DskipTests

      - name: Run Unit Tests with JaCoCo
        run: ./mvnw test jacoco:report

      - name: Check Code Coverage
        run: |
          if [ $(grep -Eo 'All Tests Passed' target/test-coverage.txt) ]; then
            echo "Tests passed with coverage above 90%";
          else
            echo "Test coverage is below 90%";
            exit 1;
          fi

  # Job for Performance Tests
  performance_tests:
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Install Performance Testing Tool
        run: |
          # Exemple avec JMH (Java Microbenchmarking Harness)
          sudo apt-get install maven
          
      - name: Run Performance Tests
        run: mvn clean install -DskipTests && mvn jmh:run

  # Job to run Static Security Testing (SAST) using Semgrep
  sast:
    runs-on: ubuntu-latest
    needs: performance_tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Semgrep
        run: |
          curl -s https://semgrep.dev/install | bash

      - name: Run Semgrep
        run: |
          semgrep --config=auto --exclude-dir=target
