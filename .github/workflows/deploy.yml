name: Build and Deploy

on:
  push:
    branches:
      - main  # DÃ©clenche le workflow lors des pushs sur la branche 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adoptopenjdk'
        
    - name: Build with Maven
      run: mvn clean install

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adoptopenjdk'

    - name: Deploy to GitHub Maven Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: mvn deploy -DskipTests

    - name: Deploy Javadoc to GitHub Pages
      run: |
        mvn site
        git clone --single-branch --branch gh-pages https://github.com/<your-github-username>/<your-repository-name>.git gh-pages
        cp -R target/site/* gh-pages/
        cd gh-pages
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "Deploy Javadoc for version $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
        git push

    - name: Deploy Cobertura Report to GitHub Pages
      run: |
        mkdir cobertura
        cp -R target/site/cobertura/* cobertura/
        git clone --single-branch --branch gh-pages https://github.com/<your-github-username>/<your-repository-name>.git gh-pages
        cp -R cobertura/* gh-pages/
        cd gh-pages
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "Deploy Cobertura report for version $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
        git push
